#!/bin/sh
#
# Pre-commit hook called by "git commit" with no arguments.
# Checks staged .js(x) files for eslint errors.
# Exits with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
# To activate, place this script in {projectRoot}/.git/hooks/pre-commit
# or better yet keep it checked in version control by leaving it here and
# changing git's hook directory to point here:
# git config core.hooksPath src/utils/gitHooks

# Get all .js(x) files excluding deleted ones (--diff-filter=d).
files=$(git diff --cached --name-only --diff-filter=d "*.js" "*.jsx")

# Verify that changes conform to eslint rules.
echo "$files" | xargs ./node_modules/.bin/eslint
# Prevent commit with non-zero exit code in case of errors.
if [[ $? != 0 ]]; then
  echo "-->" eslint error, commit denied!
  exit 1
fi

# Prettify files in place.
# Adapted from https://prettier.io/docs/en/precommit.html#option-5-bash-script.
echo "$files" | xargs ./node_modules/.bin/prettier --write

# Add back prettified files to staging.
echo "$files" | xargs git add
